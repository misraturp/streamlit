name: Nightly Build

on:
  # schedule:
  #   # Run job at 10.30pm PST or 11.30pm PDT
  #   - cron:  '30 6 * * *'
  # FOR TESTING ONLY - gh workflow run nightly.yml --ref <branch_name>:
  workflow_dispatch:

jobs:
  create-nightly-tag:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -ileo pipefail {0}

    permissions:
      # Additional permission needed to generate tag
      contents: write

    outputs:
      TAG: ${{ steps.create_tag.outputs.tag }}

    steps:
      - name: Checkout Streamlit code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup virtual env
        uses: ./.github/actions/make_init
      - name: Run make develop
        run: make develop
      - name: Create tag
        id: create_tag
        run: |
          git config --global user.email "core+streamlitbot-github@streamlit.io"
          git config --global user.name "Streamlit Bot"

          TAG="$(./scripts/pypi_nightly_create_tag.py)"
          echo "::set-output name=tag::$TAG"

          ./scripts/update_version.py $TAG
          ./scripts/update_name.py streamlit-nightly

          git add lib/setup.py
          git add frontend/package.json

          git add lib/streamlit/__init__.py
          git add lib/streamlit/version.py

          git commit -m "Update version and project name in files"

          git tag -a $TAG -m "Streamlit nightly $TAG"
          git push origin $TAG
      # TODO: Using testing webhook, switch to actual st-open-source channel webhook later
      - if: ${{ failure() }}
        name: Nightly Tag Failure Slack Message
        env: 
          SLACK_WEBHOOK: ${{ secrets.TEST_SLACK_WEBHOOK }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":":blobonfire: Nightly job failed to create a tag"}' "$SLACK_WEBHOOK"

  run-python-tests:
    needs: create-nightly-tag
    uses: ./.github/workflows/python-versions.yml
    with:
      ref: ${{needs.create-nightly-tag.outputs.tag}}

  run-javascript-tests:
    needs: create-nightly-tag
    uses: ./.github/workflows/js-tests.yml
    with:
      ref: ${{needs.create-nightly-tag.outputs.tag}}

  run-py-prod-deps-smoke-test:
    needs: create-nightly-tag
    uses: ./.github/workflows/py-prod-deps-smoke-test.yml
    with:
      ref: ${{needs.create-nightly-tag.outputs.tag}}

  run-cypress-tests:
    needs: create-nightly-tag
    uses: ./.github/workflows/cypress.yml
    with:
      ref: ${{needs.create-nightly-tag.outputs.tag}}

  test-status-notification:
    runs-on: ubuntu-latest

    if: ${{ always() }}
    needs: [run-python-tests, run-javascript-tests, run-py-prod-deps-smoke-test, run-cypress-tests]

    steps:
      - name: Checkout Streamlit code
        uses: actions/checkout@v3
        with: 
          persist-credentials: false
          submodules: 'recursive'
      - name: Send Slack notifications for failing tests
        uses: ./.github/actions/slack
        env:
          SLACK_WEBHOOK: ${{ secrets.TEST_SLACK_WEBHOOK }}
        with:
          python_result: ${{ needs.run-python-tests.result }}
          javascript_result: ${{ needs.run-javascript-tests.result }}
          py_prod_deps_result: ${{ needs.run-py-prod-deps-smoke-test.result }}
          cypress_result: ${{ needs.run-cypress-tests.result }}
  
  create-nightly-build:
    runs-on: ubuntu-latest

    needs: [create-nightly-tag, run-python-tests, run-javascript-tests, run-py-prod-deps-smoke-test, run-cypress-tests]

    defaults:
      run:
        shell: bash -ileo pipefail {0}

    steps:
      - name: Checkout Streamlit code
        uses: actions/checkout@v3
        with: 
          ref: ${{needs.create-nightly-tag.outputs.tag}}
          persist-credentials: false
          submodules: 'recursive'
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup virtual env
        uses: ./.github/actions/make_init
      - name: Run make develop
        run: make develop
      - name: Verify git tag vs. version
        env:
          TAG: ${{needs.create-nightly-tag.outputs.tag}}
        run: |
          cd lib
          python setup.py verify
      - name: Initialize .pypirc
        env:
          NIGHTLY_PYPI_USERNAME: ${{ secrets.NIGHTLY_PYPI_USERNAME }}
          NIGHTLY_PYPI_API_TOKEN: ${{ secrets.NIGHTLY_PYPI_API_TOKEN }}
        run: |
          cd lib
          echo -e "[pypi]" >> ~/.pypirc
          echo -e "username = "$NIGHTLY_PYPI_USERNAME"" >> ~/.pypirc
          echo -e "password = "$NIGHTLY_PYPI_API_TOKEN"" >> ~/.pypirc
      - name: Build Package
        timeout-minutes: 120
        run: |
          sudo apt install rsync
          make package
      # TODO: Added the if statement to gate for now
      - if: ${{ 'true' == 'false' }}
        name: Upload to PyPI
        run: |
          make distribute
      # TODO: Using testing webhook, switch to actual st-open-source channel webhook later
      - if: ${{ failure() }}
        name: Nightly Build Failure Slack Message
        env: 
          SLACK_WEBHOOK: ${{ secrets.TEST_SLACK_WEBHOOK }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":":blobonfire: Nightly build failed to release"}' "$SLACK_WEBHOOK"
